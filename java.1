public class ContainerWithMostWater {
    public int maxArea(int[] height) {
        int left = 0;  // Initialize the left pointer
        int right = height.length - 1;  // Initialize the right pointer
        int maxArea = 0;  // Initialize the maximum area

        // Loop until the left pointer meets the right pointer
        while (left < right) {
            // Calculate the current area
            int currentArea = Math.min(height[left], height[right]) * (right - left);
            // Update maxArea if the currentArea is larger
            maxArea = Math.max(maxArea, currentArea);

            // Move the pointer that points to the shorter line
            if (height[left] < height[right]) {
                left++;
            } else {
                right--;
            }
        }

        return maxArea;  // Return the maximum area found
    }

    public static void main(String[] args) {
        ContainerWithMostWater solution = new ContainerWithMostWater();
        int[] height = {1, 8, 6, 2, 5, 4, 8, 3, 7};
        System.out.println("The maximum area is: " + solution.maxArea(height));  // Output: 49
    }
}
